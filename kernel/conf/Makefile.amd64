TARGET:		kernel

S=		../../../..
ARCH=		amd64

AWK?=		awk
NM?=		nm
OBJCOPY?=	objcopy
OBJDUMP?=	objdump

%OBJS
%FILES

CFLAGS=		-m64 -march=athlon64 -mcmodel=large -I$S/../include -I$S -I. -std=c99 -mno-red-zone -fno-stack-protector -DKERNEL

kernel:		kernel.full fileids.txt
		$(OBJCOPY) -R '.traceids' -R '.tracenames' -R '.comment' kernel.full kernel 2> /dev/null

kernel.full:	$(OBJS) $S/conf/ld.amd64
		$(LD) -b elf64-x86-64 -T $S/conf/ld.amd64 -nostdlib -nodefaultlibs -o kernel.full $(OBJS)

fileids.txt:	kernel.full ../../../../tools/extract_fileids.pl
		$(OBJCOPY) -j '.traceids' -j '.tracenames' kernel.full tracesyms.elf 2>/dev/null
		../../../../tools/extract_fileids.pl ${OBJDUMP} tracesyms.elf fileids.txt

kernel.symbols:	kernel
		nm kernel|awk '{print $$1" "$$3}'|sort > kernel.symbols

#
# Assembly symbols: we need a way to pass symbols to our assembly scripts.
#
asmsyms.o:	$S/arch/${ARCH}/asmsyms.c
		$(CC) $(CFLAGS) -c -o asmsyms.o $S/arch/${ARCH}/asmsyms.c

asmsyms.h:	asmsyms.o $S/tools/gen_asmsyms.sh
		$S/tools/gen_asmsyms.sh ${NM} ${AWK} asmsyms.o > asmsyms.h

# XXX this file is actually only needed if teken is to be included XXX
teken_state.h:	$S/lib/teken/gensequences $S/lib/teken/sequences
		${AWK} -f $S/lib/teken/gensequences $S/lib/teken/sequences > teken_state.h

# pull in teken_state.h for teken.o
teken.o:	teken_state.h

clean:
		rm -f kernel asmsyms.o asmsyms.h teken_state.h fileids.txt kernel.full tracesyms.elf $(OBJS)
