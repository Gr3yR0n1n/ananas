TARGET:		kernel

S=		../../../..
ARCH=		amd64

# use the llvm/clang toolchain
TOOLCHAIN?=	$S/../toolchain/x86_64-ananas-elf-
CC=		${TOOLCHAIN}clang
CXX=		${TOOLCHAIN}clang
LD=		ld # FIXME not yet
OBJDUMP=	${TOOLCHAIN}objdump
# objcopy isn't present in llvm yet?
OBJCOPY=	objcopy
# standard UNIX utilities
AWK=		awk
NM=		nm

%OBJS
%FILES

COMMON_FLAGS=	-m64 -march=athlon64 -mcmodel=large -O2 -I$S/../include -I$S -I$S/include -I. -mno-red-zone -mno-sse -fno-stack-protector -DKERNEL
COMMON_FLAGS+=	-Wall -Werror -g

CXXFLAGS=	-std=c++14 $(COMMON_FLAGS) -fno-rtti -fno-exceptions
CFLAGS=		-std=c99 $(COMMON_FLAGS)

kernel:		kernel.full fileids.txt
		$(OBJCOPY) -R '.traceids' -R '.tracenames' -R '.comment' kernel.full kernel 2> /dev/null

kernel.full:	$(OBJS) $S/conf/ld.amd64
		$(LD) -b elf64-x86-64 -T $S/conf/ld.amd64 -nostdlib -nodefaultlibs -o kernel.full $(OBJS)

fileids.txt:	kernel.full ../../../../tools/extract_fileids.pl
		$(OBJCOPY) -j '.traceids' -j '.tracenames' kernel.full tracesyms.elf 2>/dev/null
		../../../../tools/extract_fileids.pl ${OBJDUMP} tracesyms.elf fileids.txt

kernel.symbols:	kernel
		nm kernel|awk '{print $$1" "$$3}'|sort > kernel.symbols

#
# Assembly symbols: we need a way to pass symbols to our assembly scripts.
#
asmsyms.o:	$S/arch/${ARCH}/asmsyms.cpp
		$(CXX) $(CXXFLAGS) -c -o asmsyms.o $S/arch/${ARCH}/asmsyms.cpp

asmsyms.h:	asmsyms.o $S/tools/gen_asmsyms.sh
		$S/tools/gen_asmsyms.sh ${NM} ${AWK} asmsyms.o > asmsyms.h

# XXX this file is actually only needed if teken is to be included XXX
teken_state.h:	$S/lib/teken/gensequences $S/lib/teken/sequences
		${AWK} -f $S/lib/teken/gensequences $S/lib/teken/sequences > teken_state.h

# pull in teken_state.h for teken.o
teken.o:	teken_state.h

clean:
		rm -f kernel asmsyms.o asmsyms.h teken_state.h fileids.txt kernel.full tracesyms.elf $(OBJS)
