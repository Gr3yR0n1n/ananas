TARGET:		.output

# path to the source from here
S=		../..

# tools
CC=		${TOOL_PREFIX}clang

# flags
CFLAGS=		--sysroot ${SYSROOT}
# avoid hiding M_PI_2 and such
CFLAGS+=	-std=c99 -D_BSD_SOURCE
CFLAGS+=	-I. -O3
CFLAGS+=	-I$S/include
CFLAGS+=	-I$S/internal
CFLAGS+=	-Wall -Werror
# XXX some files need this to build
CFLAGS+=	-Wno-unknown-pragmas -Wno-shift-op-parentheses
CFLAGS+=	-fPIC -ffreestanding -fno-builtin

# files to build - mostly stolen from musl's makefile
#SOURCES=	$(shell find $S/src -name "*.c")
#SOURCES+=	$(shell find $S/complex -name "*.c")
#SOURCES+=	$(shell find $S/arch/${ARCH} -name "*.s")
BASE_DIRS=	$(addprefix $S/,src fenv complex)
BASE_GLOBS=	$(addsuffix /*.c,$(BASE_DIRS))
BASE_SRCS=	$(sort $(wildcard $(BASE_GLOBS)))
BASE_OBJS=	$(patsubst %,%.o,$(basename $(BASE_SRCS)))
ARCH_DIRS=	$(addprefix $S/,arch/$(ARCH) fenv/$(ARCH))
ARCH_GLOBS=	$(addsuffix /*.[csS],$(ARCH_DIRS))
ARCH_SRCS=	$(sort $(wildcard $(ARCH_GLOBS)))
ARCH_OBJS=	$(patsubst %,%.o,$(basename $(ARCH_SRCS)))
REPLACED_OBJS=	$(sort $(subst /arch/$(ARCH)/,/src/,$(ARCH_OBJS)))
OBJS=		$(filter-out $(REPLACED_OBJS), $(BASE_OBJS) $(ARCH_OBJS))

.PHONY:		.output
.output:	libm.a libm.so

%.o:		%.c
		$(CC) $(CFLAGS) -c -o $@ $<

math-bits:	$S/include/${ARCH}
		ln -sf $S/include/${ARCH} math-bits

libm.a:		math-bits $(OBJS)
		$(AR) cr libm.a $(OBJS)

libm.so:	math-bits $(OBJS)
		$(CC) --sysroot ${SYSROOT} -nostdlib -shared -Wl,-soname,libm.so -o libm.so $(OBJS)

# installation
install:	${SYSROOT}/usr/lib/libm.a ${SYSROOT}/usr/lib/libm.so install_headers

install_headers:
		cp -R ${S}/include/* ${SYSROOT}/usr/include
		cp -R $S/include/${ARCH} ${SYSROOT}/usr/include/math-bits

${SYSROOT}/usr/lib/libm.a:	libm.a
		cp libm.a ${SYSROOT}/usr/lib

${SYSROOT}/usr/lib/libm.so:	libm.so
		cp libm.so ${SYSROOT}/usr/lib

clean:
		rm -f libm.a libm.so math-bits $(OBJS)
