TARGET:		libc.a

S=		../..
I=		$S/../include

CFLAGS+=	-nostdlib -nostdinc -I${I} -I.
OBJS+=		memfuncs.o print.o string.o io.o syscall.o misc.o malloc.o ctype.o dtoa.o

ASMFLAGS=	$(CFLAGS) -DASM

memfuncs.o:	$S/lib/memfuncs.c
		$(CC) $(CFLAGS) -c -o memfuncs.o $S/lib/memfuncs.c

print.o:	$S/lib/print.c
		$(CC) $(CFLAGS) -c -o print.o $S/lib/print.c

string.o:	$S/lib/string.c
		$(CC) $(CFLAGS) -c -o string.o $S/lib/string.c

io.o:		$S/gen/io.c
		$(CC) $(CFLAGS) -c -o io.o $S/gen/io.c

misc.o:		$S/lib/misc.c
		$(CC) $(CFLAGS) -c -o misc.o $S/lib/misc.c

malloc.o:	$S/lib/malloc.c
		$(CC) $(CFLAGS) -c -o malloc.o $S/lib/malloc.c

ctype.o:	$S/lib/ctype.c
		$(CC) $(CFLAGS) -c -o ctype.o $S/lib/ctype.c

dtoa.o:		$S/lib/dtoa.c
		$(CC) $(CFLAGS) -c -o dtoa.o $S/lib/dtoa.c

syscall.o:	$S/gen/syscall.c $S/gen/syscalls.inc.c
		$(CC) $(CFLAGS) -c -o syscall.o $S/gen/syscall.c

machine:	$S/../include/sys/${ARCH}
		ln -sf $S/../include/sys/${ARCH} machine

libc.a:		machine $(OBJS) $(MDOBJS)
		$(AR) cr libc.a $(OBJS) $(MDOBJS)

clean:
		rm -f libc.a machine $(OBJS) $(MDOBJS)
